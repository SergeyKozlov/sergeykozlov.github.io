@DevOps –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π Ansible playbook @tasks1.yml.
–ù—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å —Ç–∞—Å–∫—É "Include tasks tasks2 in play":
1. –í—ã–∑–æ–≤ tasks2.yml –¥–æ–ª–∂–µ–Ω –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å—Å—è 25 —Ä–∞–∑.
2. –ü–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –≤—ã–∑–∞–≤–∞ tasks2.yml –¥–µ–ª–∞–π –ø–∞—É–∑—É 5 —Å–µ–∫—É–Ω–¥.
3. –ì–ª–∞–≤–Ω–∞—è –∑–∞–¥–∞—á–∞: –ø—Ä–∏ –∫–∞–∂–¥–æ–π –∏–Ω—Ç–µ—Ä–∞—Ü–∏–∏ —Ü–∏–∫–ª–∞ –≤—ã–∑–æ–≤–æ–≤ tasks2.yml –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π random_number –∏–∑ tasks2.yml –≤ —Ü–∏–∫–ª —Ç–∞—Å–∫–∏ "Include tasks tasks2 in play".
4. –ï—Å–ª–∏ random_number = 12, —Ç–æ –ø—Ä–µ—Ä–≤–∞—Ç—å —Ü–∏–∫–ª –≤—ã–∑–æ–≤–æ–≤ tasks2.yml.
5. –í—ã–≤–æ–¥–∏—Ç—å –Ω–∞ —ç–∫—Ä–∞–Ω –∑–Ω–∞—á–µ–Ω–∏–µ random_number.

–í @tasks2.yml –Ω—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å —Ç–∞—Å–∫—É "Generate a random number":
1. –ó–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π random_number –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –¥–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è @tasks1.yml.

–û–∂–∏–¥–∞–π –≤–≤–æ–¥–∞ @tasks1.yml –∏ @tasks2.yml

tasks1.yml:
- hosts: all
  tasks:
    - ansible.builtin.debug:
        msg: task1

    - name: Include tasks tasks2 in play
      ansible.builtin.include_tasks:
        file: tasks2.yml

    - ansible.builtin.debug:
        msg: task10



tasks2.yml:
- name: Generate a random number
  set_fact:
    random_number: "{{ 100 | random }}"
    
- debug:
    msg: "Random number: {{ random_number }}"


–û—Ç–ª–∏—á–Ω–æ, –≤—ã –ø—Ä–∏—Å–ª–∞–ª–∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ `tasks1.yml` –∏ `tasks2.yml`.

–¢–µ–ø–µ—Ä—å —è –≤—ã–ø–æ–ª–Ω—é –≤—Å–µ —É–∫–∞–∑–∞–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏:

---

## üîß –ß—Ç–æ –Ω—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å:

### –í `tasks1.yml`:

1. **–í—ã–ø–æ–ª–Ω–∏—Ç—å `tasks2.yml` 25 —Ä–∞–∑**.
2. **–ü–æ—Å–ª–µ –∫–∞–∂–¥–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏ ‚Äî –ø–∞—É–∑–∞ 5 —Å–µ–∫—É–Ω–¥**.
3. **–ü–µ—Ä–µ–¥–∞—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é `random_number` –Ω–∞—Ä—É–∂—É –∏–∑ `tasks2.yml`**.
4. **–ï—Å–ª–∏ `random_number == 12`, —Ç–æ –ø—Ä–µ—Ä–≤–∞—Ç—å —Ü–∏–∫–ª**.
5. **–í—ã–≤–æ–¥–∏—Ç—å `random_number` –Ω–∞ —ç–∫—Ä–∞–Ω –ø—Ä–∏ –∫–∞–∂–¥–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏**.

### –í `tasks2.yml`:

* –û–±–µ—Å–ø–µ—á–∏—Ç—å, —á—Ç–æ–±—ã `random_number` –±—ã–ª **–¥–æ—Å—Ç—É–ø–µ–Ω –≤–Ω–µ —Ñ–∞–π–ª–∞**, —Ç–æ –µ—Å—Ç—å —á–µ—Ä–µ–∑ `set_fact`.

---

## ‚úÖ –û–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π `tasks1.yml`:

```yaml
- hosts: all
  gather_facts: false
  vars:
    iteration_result: []

  tasks:
    - ansible.builtin.debug:
        msg: task1

    - name: Loop through include of tasks2.yml
      vars:
        loop_counter: "{{ range(1, 26) | list }}"
      block:
        - name: Include tasks2.yml with loop
          include_tasks: tasks2.yml
          register: task2_result
          loop: "{{ loop_counter }}"
          loop_control:
            loop_var: iteration
            label: "Iteration {{ iteration }}"
          when: stop_loop is not defined or not stop_loop
          vars:
            current_iteration: "{{ iteration }}"

        - name: Pause 5 seconds
          ansible.builtin.pause:
            seconds: 5
          when: stop_loop is not defined or not stop_loop

        - name: Check random_number and maybe stop the loop
          set_fact:
            stop_loop: true
          when: random_number == 12

        - name: Show current random_number
          debug:
            msg: "Random number was: {{ random_number }}"
          when: random_number is defined

    - ansible.builtin.debug:
        msg: task10
```

---

## ‚úÖ –û–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π `tasks2.yml`:

```yaml
- name: Generate a random number
  set_fact:
    random_number: "{{ 100 | random }}"

- debug:
    msg: "Random number: {{ random_number }}"
```

---

## üß† –ü—Ä–∏–º–µ—á–∞–Ω–∏—è:

* –ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º `set_fact` –≤ `tasks2.yml`, —á—Ç–æ–±—ã `random_number` –±—ã–ª –¥–æ—Å—Ç—É–ø–µ–Ω –≤ `tasks1.yml` –ø–æ—Å–ª–µ –≤–∫–ª—é—á–µ–Ω–∏—è.
* –í `tasks1.yml` —Ü–∏–∫–ª —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω —á–µ—Ä–µ–∑ `loop` + `include_tasks`, —Å –∫–æ–Ω—Ç—Ä–æ–ª–µ–º —á–µ—Ä–µ–∑ —Ñ–ª–∞–≥ `stop_loop`.
* –ü–æ—Å–ª–µ –∫–∞–∂–¥–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –ø–∞—É–∑–∞ `pause: 5`.
* –ü—Ä–∏ –∑–Ω–∞—á–µ–Ω–∏–∏ `random_number == 12` —Å—Ç–∞–≤–∏—Ç—Å—è —Ñ–ª–∞–≥ `stop_loop`, —á—Ç–æ–±—ã –ø—Ä–µ–∫—Ä–∞—Ç–∏—Ç—å —Ü–∏–∫–ª.
* `register` –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –∫ `include_tasks`, –Ω–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –∏–∑ `set_fact` —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –≥–ª–æ–±–∞–ª—å–Ω–æ–π, –ø–æ—ç—Ç–æ–º—É –µ—ë –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –≤–∫–ª—é—á–µ–Ω–∏—è.

---

–•–æ—á–µ—à—å, —è —Å–≥–µ–Ω–µ—Ä–∏—Ä—É—é –æ–¥–∏–Ω –∏—Ç–æ–≥–æ–≤—ã–π `playbook` —Ü–µ–ª–∏–∫–æ–º?


-------
–ù–∞–≤–µ—Ä–Ω–æ–µ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ:
–°–æ–≥–ª–∞—Å–Ω–æ —Ç–≤–æ–∏–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º, –≤–æ—Ç –∫–∞–∫ –º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –æ–±–∞ —Ñ–∞–π–ª–∞.

---

## üìÅ **tasks2.yml** (–≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∏ —ç–∫—Å–ø–æ—Ä—Ç `random_number`):

–î–æ–±–∞–≤–∏–º –∑–∞–¥–∞—á—É, –∫–æ—Ç–æ—Ä–∞—è –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ, —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –µ–≥–æ, –∏ –¥–µ–ª–∞–µ—Ç `set_fact`, —á—Ç–æ–±—ã –æ–Ω–æ –±—ã–ª–æ –¥–æ—Å—Ç—É–ø–Ω–æ —Å–Ω–∞—Ä—É–∂–∏ (–≤ `tasks1.yml`):

```yaml
# tasks2.yml
- name: Generate a random number
  ansible.builtin.random:
    min: 1
    max: 20
  register: random_reg

- name: Set fact for parent play
  ansible.builtin.set_fact:
    random_number: "{{ random_reg.random }}"
```

–¢–µ–ø–µ—Ä—å `random_number` –∏–∑ `tasks2.yml` –±—É–¥–µ—Ç –≤–∏–¥–µ–Ω –∏ –≤ `tasks1.yml`, –±–ª–∞–≥–æ–¥–∞—Ä—è `set_fact`.

---

## üìÅ **tasks1.yml** (–≤–∫–ª—é—á–µ–Ω–∏–µ —Å 25 –∏—Ç–µ—Ä–∞—Ü–∏—è–º–∏, –ø–∞—É–∑–æ–π, –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏ –∏ –≤—ã–≤–æ–¥–æ–º):

```yaml
- hosts: all
  vars:
    max_runs: 25

  tasks:
    - ansible.builtin.debug:
        msg: "task1"

    - name: Loop 25 times include tasks2
      ansible.builtin.include_tasks:
        file: tasks2.yml
      loop: "{{ range(1, max_runs + 1) | list }}"
      loop_control:
        loop_var: run_idx
      register: include_results

    - name: After loop ‚Äì debug last random_number
      ansible.builtin.debug:
        msg: "Finished loop. Last random_number={{ random_number }}"

    - ansible.builtin.debug:
        msg: "task10"
```

–û–¥–Ω–∞–∫–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π `include_tasks + loop_control.pause` –Ω–µ –ø—Ä–∏–æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–¥–∞—á –≤–Ω—É—Ç—Ä–∏ –≤–∫–ª—é—á—ë–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞([groups.google.com][1], [stackoverflow.com][2], [docs.ansible.com][3], [github.com][4], [github.com][5], [forum.ansible.com][6]) –∏ —É—Å–ª–æ–≤–∏–µ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç.

–ß—Ç–æ–±—ã –æ–±–æ–π—Ç–∏ —ç—Ç–æ, –≤–Ω—É—Ç—Ä–∏ `tasks1.yml` –ª—É—á—à–µ –∑–∞–º–µ–Ω–∏—Ç—å `include_tasks` –Ω–∞ –≤—ã–∑–æ–≤ —Å `pause` –ø–æ—Å–µ—Ä–µ–¥–∏–Ω–µ, –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –ª–æ–≥–∏–∫—É "if random\_number == 12 ‚Üí break". –ù–æ Ansible **–Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π break** –≤–Ω–µ `loop_control.break_when` (–≤–µ—Ä—Å–∏—è ‚â•2.18), –∫–æ—Ç–æ—Ä–∞—è —Ç–æ–∂–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤–Ω—É—Ç—Ä–∏ `include_tasks`.

–ü–æ—ç—Ç–æ–º—É –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ ‚Äî —Å–¥–µ–ª–∞—Ç—å **–≤–Ω–µ—à–Ω–∏–π —Ü–∏–∫–ª**, —Å `until`:

```yaml
- hosts: all
  vars:
    max_runs: 25

  tasks:
    - ansible.builtin.debug:
        msg: "task1"

    - name: Loop till random_number==12 or reach max
      block:
        - name: Include tasks2 and get random_number
          include_tasks: tasks2.yml

        - name: Show random_number
          debug:
            msg: "Iteration {{ iteration | default(1) }} - random_number={{ random_number }}"

        - name: Pause for 5 seconds
          pause:
            seconds: 5
      rescue:
        - debug:
            msg: "Unexpected error"
      loop: "{{ range(1, max_runs + 1) | list }}"
      loop_control:
        loop_var: iteration
      when: random_number is not defined or random_number != 12

    - name: Done looping
      debug:
        msg: "Loop stopped at iteration {{ iteration }} with random_number={{ random_number }}"

    - ansible.builtin.debug:
        msg: "task10"
```

### –∫–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:

1. **–¶–∏–∫–ª:** `loop` –ø–æ 1‚Ä¶25, var `iteration`.
2. **Include –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è:** –≤–Ω—É—Ç—Ä–∏ –∫–∞–∂–¥–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏ –ø–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è `tasks2.yml`, –∫–æ—Ç–æ—Ä—ã–π –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç `random_number` –∏ –¥–µ–ª–∞–µ—Ç `set_fact`.
3. **–í—ã–≤–æ–¥:** —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ ‚Äî debug —Å —Ç–µ–∫—É—â–∏–º `random_number`.
4. **–ü–∞—É–∑–∞:** `pause: 5s`.
5. **–£—Å–ª–æ–≤–∏–µ –≤—ã—Ö–æ–¥–∞:** –≤—ã—Ä–∞–∂–µ–Ω–∏–µ `when:` –ø—Ä–æ–≤–µ—Ä—è–µ—Ç: –µ—Å–ª–∏ `random_number == 12`, —Ç–æ —Å–ª–µ–¥—É—é—â–∏–π iteration –Ω–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∏ —Ü–∏–∫–ª –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è.
6. **–ò—Ç–æ–≥–æ–≤—ã–π debug** –ø–æ—Å–ª–µ –≤—ã—Ö–æ–¥–∞ –∏–∑ —Ü–∏–∫–ª–∞.

---

## –û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ

* –ò—Å–ø–æ–ª—å–∑—É–µ–º **–≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π `set_fact`**, —á—Ç–æ–±—ã `random_number` —Å—Ç–∞–ª –¥–æ—Å—Ç—É–ø–µ–Ω –≤ –≥–ª–∞–≤–Ω–æ–º –ø–ª–µ–π–±—É–∫–µ.
* **`include_tasks` + `loop_control.pause` –Ω–µ –¥–∞—ë—Ç –ø–∞—É–∑—É –≤–Ω—É—Ç—Ä–∏ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è**; –≤–º–µ—Å—Ç–æ —ç—Ç–æ–≥–æ –ø–∞—É–∑—É –¥–µ–ª–∞–µ–º –≤—Ä—É—á–Ω—É—é —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ include([spacelift.io][7], [docs.ansible.com][3]).
* **–í—ã—Ö–æ–¥ –∏–∑ —Ü–∏–∫–ª–∞:** –∑–∞ —Å—á—ë—Ç `when`, —Ü–∏–∫–ª –ø—Ä–µ–∫—Ä–∞—â–∞–µ—Ç—Å—è –∫–æ–≥–¥–∞ —á–∏—Å–ª–æ —Ä–∞–≤–Ω–æ 12; –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –Ω–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π `break`.
* –ü—Ä–∏–º–µ–Ω–∏–ª–∏ **range(...)** –¥–ª—è 25 –∏—Ç–µ—Ä–∞—Ü–∏–π.
* –í—Å–µ —É—Å–ª–æ–≤–∏—è –∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã.

---

–ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –≤–µ—Ä—Å–∏—è —Å –ø—Ä—è–º—ã–º `break_when` (—Ç—Ä–µ–±—É–µ—Ç Ansible ‚â•‚ÄØ2.18) ‚Äî —Å–∫–∞–∂–∏, —è –¥–æ–±–∞–≤–ª—é.

[1]: https://groups.google.com/g/ansible-project/c/yg45JBxdfv0?utm_source=chatgpt.com "Use loop control only when condition is met - Google Groups"
[2]: https://stackoverflow.com/questions/76526464/how-to-dynamically-end-an-include-tasks-loop-in-ansible?utm_source=chatgpt.com "How to dynamically end an include_tasks loop in Ansible"
[3]: https://docs.ansible.com/ansible/latest/playbook_guide/playbooks_loops.html?utm_source=chatgpt.com "Loops ‚Äî Ansible Community Documentation"
[4]: https://github.com/ansible/ansible/issues/70354?utm_source=chatgpt.com "loop_control pause does not pause the execution of the tasks ..."
[5]: https://github.com/ansible/ansible/issues/84443?utm_source=chatgpt.com "break_when doesn't properly evaluate variable state when ... - GitHub"
[6]: https://forum.ansible.com/t/ansible-loop-with-include-tasks-preserves-variables-from-other-iterations/10829?utm_source=chatgpt.com "Ansible loop with include_tasks preserves variables from other ..."
[7]: https://spacelift.io/blog/ansible-loops?utm_source=chatgpt.com "Ansible Loops : How To Use, Tutorial & Examples - Spacelift"


