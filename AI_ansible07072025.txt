–°–¥–µ–ª–∞–π —Ç–∞—Å–∫—É Ansible –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å:
–û–±—ä—è–≤–ª—è—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é count_before.
–í—ã–ø–æ–ª–Ω—è—Ç—å –º–æ–¥—É–ª—å shell —Å –∫–æ–º–∞–Ω–¥–∞–º–∏:
–û—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å —Ü–∏–∫–ª –∑–∞–ø—Ä–æ—Å–æ–≤ –∏–∑ 15 –∏–Ω—Ç–µ—Ä–∞—Ü–∏–π.
–í –∫–∞–∂–¥–æ–π –∏–Ω—Ç–µ—Ä–∞—Ü–∏–∏ –¥–µ–ª–∞—Ç—å –∑–∞–ø—Ä–æ—Å REST API —Å–æ—Å—Ç–æ—è—â–∏–π –∏–∑:
echo ... –ø–∞—Ä–∞–º–µ—Ç—Ä—ã ... |
openssl –ø–∞—Ä–∞–º–µ—Ç—Ä—ã.
–†–∞—Å–ø–∞—Ä–∏–≤–∞—Ç—å –æ—Ç–≤–µ—Ç –æ—Ç rest api:
–û—Å—Ç–∞–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω—é—é —Å—Ç—Ä–æ–∫—É.
–ò–∑ —Å—Ç–æ—Ä–∏ –≤—ã—Ç–∞—â–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π task_count.
–ï—Å–ª–∏ `task_count == count_before`, —Ç–æ –ø—Ä–µ—Ä–≤–∞—Ç—å —Ü–∏–∫–ª.
–ï—Å–ª–∏ –≤ –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–º –æ—Ç–≤–µ—Ç–µ –æ—Ç rest api –Ω–µ—Ç "http:200", —Ç–æ –ø—Ä–µ—Ä–≤–∞—Ç—å —Ü–∏–∫–ª.
–í—ã–≤–æ–¥–∏—Ç—å –Ω–æ–º–µ—Ä –∏–Ω—Ç–µ—Ä–∞—Ü–∏–∏ –∏ task_count –Ω–∞ —ç–∫—Ä–∞–Ω –ø—Ä–∏ –∫–∞–∂–¥–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏.
–ü–æ—Å–ª–µ –∫–∞–∂–¥–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏ ‚Äî –ø–∞—É–∑–∞ 5 —Å–µ–∫—É–Ω–¥.

–í–æ—Ç Ansible —Ç–∞—Å–∫–∞, –≤—ã–ø–æ–ª–Ω—è—é—â–∞—è –æ–ø–∏—Å–∞–Ω–Ω—É—é –≤–∞–º–∏ –ª–æ–≥–∏–∫—É:

* –û–±—ä—è–≤–ª—è–µ—Ç—Å—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è `count_before`.
* –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Ü–∏–∫–ª –∏–∑ 15 –∏—Ç–µ—Ä–∞—Ü–∏–π.
* –ù–∞ –∫–∞–∂–¥–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏:

  * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è REST-–∑–∞–ø—Ä–æ—Å —á–µ—Ä–µ–∑ `openssl`.
  * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –≤—ã–≤–æ–¥:

    * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è –Ω–∞–ª–∏—á–∏–µ `http:200`.
    * –ò–∑–≤–ª–µ–∫–∞–µ—Ç—Å—è `task_count` –∏–∑ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å—Ç—Ä–æ–∫–∏.
    * –°—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç—Å—è —Å `count_before`.
  * –ü—Ä–∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–∏ –∑–Ω–∞—á–µ–Ω–∏–π –∏–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ `http:200` ‚Äî —Ü–∏–∫–ª –ø—Ä–µ—Ä—ã–≤–∞–µ—Ç—Å—è.
  * –í—ã–≤–æ–¥–∏—Ç—Å—è –Ω–æ–º–µ—Ä –∏—Ç–µ—Ä–∞—Ü–∏–∏ –∏ –∑–Ω–∞—á–µ–Ω–∏–µ `task_count`.
  * –ü–∞—É–∑–∞ 5 —Å–µ–∫—É–Ω–¥.

---

## ‚úÖ Ansible playbook-—Ñ—Ä–∞–≥–º–µ–Ω—Ç

```yaml
- name: Loop REST call with openssl and conditional exit
  hosts: localhost
  gather_facts: false
  vars:
    count_before: 42  # –£–∫–∞–∂–∏ –Ω—É–∂–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ task_count –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è

  tasks:
    - name: REST API polling loop
      vars:
        max_iterations: 15
      block:
        - name: Run custom REST call loop
          ansible.builtin.shell: |
            for i in $(seq 1 {{ max_iterations }}); do
              echo "Iteration $i: Starting"

              RESPONSE=$(echo "some request parameters" | openssl s_client -connect example.com:443 -quiet 2>/dev/null)

              LAST_LINE=$(echo "$RESPONSE" | tail -n 1)
              TASK_COUNT=$(echo "$LAST_LINE" | grep -oP 'task_count\s*=\s*\K\d+')

              echo "$RESPONSE" | grep -q "http:200"
              if [ $? -ne 0 ]; then
                echo "Iteration $i: No http:200 found, exiting"
                exit 1
              fi

              echo "Iteration $i: task_count=$TASK_COUNT"

              if [ "$TASK_COUNT" = "{{ count_before }}" ]; then
                echo "Iteration $i: task_count matched count_before, exiting"
                exit 0
              fi

              sleep 5
            done
          register: rest_loop_output
          changed_when: false

        - name: Show shell loop output
          debug:
            var: rest_loop_output.stdout_lines
```

---

## üìù –û–±—ä—è—Å–Ω–µ–Ω–∏–µ:

* –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è `count_before` —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –≤ `vars`.
* `openssl s_client` –≤—ã–ø–æ–ª–Ω—è–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ (–ø—Ä–∏–º–µ—Ä: `example.com:443`) ‚Äî –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à –∞–¥—Ä–µ—Å.
* `tail -n 1` –æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø–æ—Å–ª–µ–¥–Ω—é—é —Å—Ç—Ä–æ–∫—É.
* `grep -oP` —Å `\K` –∏–∑–≤–ª–µ–∫–∞–µ—Ç `task_count=...`.
* –ü—Ä–æ–≤–µ—Ä–∫–∞ `http:200` –∏—â–µ—Ç —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç.
* –ü–∞—É–∑–∞ `sleep 5` –º–µ–∂–¥—É –∏—Ç–µ—Ä–∞—Ü–∏—è–º–∏.
* –ï—Å–ª–∏ —É—Å–ª–æ–≤–∏–µ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç ‚Äî —Å–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–∞–µ—Ç —Ü–∏–∫–ª –¥–æ—Å—Ä–æ—á–Ω–æ (`exit`).

---

üîß **–ó–∞–º–µ–Ω–∏—Ç–µ**:

* `example.com:443` –Ω–∞ –≤–∞—à —Å–µ—Ä–≤–µ—Ä.
* `"some request parameters"` ‚Äî –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π payload –∑–∞–ø—Ä–æ—Å–∞.
* `task_count=...` ‚Äî –Ω–∞ –≤–∞—à —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏–π —Ñ–æ—Ä–º–∞—Ç —Å—Ç—Ä–æ–∫–∏, –µ—Å–ª–∏ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è.

–•–æ—á–µ—à—å, —è –ø–µ—Ä–µ–ø–∏—à—É –ø–æ–¥ `uri` –º–æ–¥—É–ª—å –≤–º–µ—Å—Ç–æ `openssl` (–µ—Å–ª–∏ REST API —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π)?

07072025 -------------------------------------------------

–ó–¥–µ–ª–∞–π —Ç–∞—Å–∫—É –¥–ª—è Ansible, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –¥–µ–ª–∞—Ç—å:
1. –ë—Ä–∞—Ç—å —Ç–µ–∫—Å—Ç:
    Waiting for response...    ------------------ Running/Restarting Jobs -------------------    04.07.2025 17:11:20 : 866456f2d2926b6613aab39b65adef63 : IpData Job (RUNNING)    07.07.2025 15:29:27 : 6052af8106efa579e0069e20a5ad560e : Rules Job (RUNNING)    07.07.2025 17:06:08 : b25edc19c780e1084815b342ac81c583 : Rules Job (RUNNING)    07.07.2025 17:41:22 : 28ecb3e6ba209d2a293a7affd4cf60f1 : Rules Job (RUNNING)    --------------------------------------------------------------    No scheduled jobs.    ---------------------- Terminated Jobs -----------------------    07.07.2025 17:55:57 : 1eefbfda8743a58154c525a1a41d113b : Rules Job (FAILED)    07.07.2025 18:01:53 : 519783fbc438a27af523ab022b23d471 : Rules Job (FAILED)    07.07.2025 18:04:54 : f94c980240e2fbd259e509c5e8ba00f5 : Rules Job (FAILED)    07.07.2025 18:06:59 : 336adba7cb1a409586f8df6a8faceb4d : Rules Job (FAILED)    07.07.2025 18:08:48 : a2546e55a8002ddc28d2ab35b742888f : Rules Job (FAILED)    --------------------------------------------------------------

2. –û—Ç–±—Ä–∞—Å—ã–≤–∞—Ç—å –≤–µ—Å—å —Ç–µ–∫—Å—Ç –ø–æ—Å–ª–µ "Terminated Jobs".
3. –ò–∑ –±–ª–æ–∫–∞ Running/Restarting Jobs –≤—ã–¥–µ–ª—è—Ç—å –∏–∑ –æ—Å—Ç–∞–≤—à–µ–≥–æ—Å—è —Ç–µ–∫—Å—Ç–∞ —Ç–æ–ª—å–∫–æ uuid —Ç–∏–ø–∞ 866456f2d2926b6613aab39b65adef63.
4. –í—Å–µ –≤—ã–¥–µ–ª–µ–Ω–Ω—ã–µ uuid —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é flink_jobs_uuid –≤ —Ñ–æ—Ä–º–∞—Ç–µ list.
5. –ü–æ–ª—É—á–µ–Ω–Ω–æ–µ —Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–º–µ—Å—Ç–∏ –≤ —Ç–∞—Å–∫—É Ansible.
6. –ü–æ–ª—É—á–µ–Ω–Ω–∞—è —Ç–∞—Å–∫–∞ Ansible –¥–æ–ª–∂–Ω–∞ –Ω–∞ –≤—Ö–æ–¥–µ –ø–æ–ª—É—á–∞—Ç—å —Ç–µ–∫—Å—Ç –∏–∑ –ø—É–Ω–∫—Ç–∞ 1, –∞ –Ω–∞ –≤—ã—Ö–æ–¥–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é flink_jobs_uuid –≤ —Ñ–æ—Ä–º–∞—Ç–µ list.
7. –¢–∞—Å–∫–∞ –¥–æ–ª–∂–Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è.

-----

–í–æ—Ç **Ansible —Ç–∞—Å–∫–∞**, –∫–æ—Ç–æ—Ä–∞—è:

* –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –≤—Ö–æ–¥–Ω–æ–π —Ç–µ–∫—Å—Ç –∫–∞–∫ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é (`log_text`)
* –û–±—Ä–µ–∑–∞–µ—Ç –≤—Å—ë –ø–æ—Å–ª–µ —Å—Ç—Ä–æ–∫–∏ `"Terminated Jobs"`
* –° –ø–æ–º–æ—â—å—é **—Ä–µ–≥—É–ª—è—Ä–Ω–æ–≥–æ –≤—ã—Ä–∞–∂–µ–Ω–∏—è** –∏–∑–≤–ª–µ–∫–∞–µ—Ç UUID –∏–∑ –±–ª–æ–∫–∞ `"Running/Restarting Jobs"`
* –°–æ—Ö—Ä–∞–Ω—è–µ—Ç UUID –≤ —Å–ø–∏—Å–æ–∫ `flink_jobs_uuid`

---

### ‚úÖ **Ansible —Ç–∞—Å–∫–∞:**

```yaml
- name: Extract UUIDs of running Flink jobs
  hosts: localhost
  gather_facts: false
  vars:
    log_text: ""  # —Å—é–¥–∞ –º–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –ª–æ–≥ —Å–Ω–∞—Ä—É–∂–∏

  tasks:
    - name: Trim log text at "Terminated Jobs"
      set_fact:
        trimmed_log: >-
          {{ log_text | regex_replace('(?s)---------------------- Terminated Jobs -----------------------.*$', '') }}

    - name: Extract UUIDs from Running/Restarting Jobs block
      set_fact:
        flink_jobs_uuid: >-
          {{ trimmed_log | regex_findall('(?<=:\\s)([a-f0-9]{32})(?=\\s:\\s.*?\\(RUNNING\\))') }}

    - name: Show extracted Flink job UUIDs
      debug:
        var: flink_jobs_uuid
```

---

### üß™ –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è

–¢—ã –º–æ–∂–µ—à—å –ø–µ—Ä–µ–¥–∞—Ç—å `log_text` —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥–Ω—É—é —Å—Ç—Ä–æ–∫—É:

```bash
ansible-playbook extract_flink_jobs.yml -e "log_text='Waiting for response... ------------------ Running/Restarting Jobs ------------------- 04.07.2025 17:11:20 : 866456f2d2926b6613aab39b65adef63 : IpData Job (RUNNING) ...'"
```

---

### üîç –û–±—ä—è—Å–Ω–µ–Ω–∏–µ:

1. **`regex_replace`**:

   * `(?s)` ‚Äî –≤–∫–ª—é—á–∞–µ—Ç —Ä–µ–∂–∏–º "dot matches all"
   * –£–¥–∞–ª—è–µ—Ç –≤—Å—ë –æ—Ç `---------------------- Terminated Jobs -----------------------` –¥–æ –∫–æ–Ω—Ü–∞ —Ç–µ–∫—Å—Ç–∞

2. **`regex_findall`**:

   * –ù–∞—Ö–æ–¥–∏—Ç –≤—Å–µ —Å—Ç—Ä–æ–∫–∏, –≥–¥–µ:

     * –ø–µ—Ä–µ–¥ UUID —Å—Ç–æ–∏—Ç `: `
     * —Å–∞–º UUID —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ 32 —Å–∏–º–≤–æ–ª–æ–≤ `[a-f0-9]{32}`
     * –∑–∞ –Ω–∏–º —Å–ª–µ–¥—É–µ—Ç ` : <—á—Ç–æ-—Ç–æ> (RUNNING)`

---

–•–æ—á–µ—à—å ‚Äî –º–æ–≥—É –æ—Ñ–æ—Ä–º–∏—Ç—å –∫–∞–∫ —Ä–æ–ª—å, —Ñ–∏–ª—å—Ç—Ä, –º–æ–¥—É–ª—å –∏–ª–∏ —Å —Ç–µ—Å—Ç–æ–º.






